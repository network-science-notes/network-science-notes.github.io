[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Network Science: Models, Mathematics, and Computation",
    "section": "",
    "text": "Welcome\nThis is a set of notes developed for an undergraduate course in network science. The target audience for these notes are undergraduates in mathematics and computer science who have completed courses in linear algebra, discrete mathematics, and programming.\nThese notes are a collaborative project between Dr. Heather Zinn Brooks (Department of Mathematics, Harvey Mudd College) and Dr. Phil Chodrow (Department of Computer Science, Middlebury College).",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#pedagogical-features",
    "href": "index.html#pedagogical-features",
    "title": "Network Science: Models, Mathematics, and Computation",
    "section": "Pedagogical Features",
    "text": "Pedagogical Features\nThese notes are explicitly designed for undergraduate instruction with students who are interested in and fluent in both mathematics and computation. For this reason:\n\nComputational examples are integrated into the text and shown throughout.\nLive versions of lecture notes are supplied as Jupyter Notebooks which can be opened in Google Colab. Certain code components have been removed. The purpose is to facilitate live-coding in lectures.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#use-and-reuse",
    "href": "index.html#use-and-reuse",
    "title": "Network Science: Models, Mathematics, and Computation",
    "section": "Use and Reuse",
    "text": "Use and Reuse\nThese notes are free to reuse and adapt for educational purposes. Attribution is appreciated but not required.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#source-texts",
    "href": "index.html#source-texts",
    "title": "Network Science: Models, Mathematics, and Computation",
    "section": "Source Texts",
    "text": "Source Texts\nThese notes draw on several source texts, the most important of which is Newman (2018).",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "Network Science: Models, Mathematics, and Computation",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nThis site was generated using the Quarto publishing system. It is hosted on GitHub and published via GitHub Pages. We thank Mason Porter for inspiration in earlier versions of this course.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "Network Science: Models, Mathematics, and Computation",
    "section": "References",
    "text": "References\n\n\n\n\nNewman, Mark. 2018. Networks. Oxford University Press.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "chapters/01-example.html",
    "href": "chapters/01-example.html",
    "title": "1  Some Stuff About Networks",
    "section": "",
    "text": "Size of the Giant Component\nLet \\(S\\) be the size of the giant component in an Erdős–Rényi random graph, assuming there is one. Then, \\(s = S/n\\) is the probability that a randomly selected node is in the giant component. Let \\(u = 1 - s\\) be the probability that a given node is not in the giant component.\nLet’s take a random node \\(i\\), and ask it the probability that it’s in the giant component. Well, one answer to that question is just “\\(u\\).” On the other hand, we can also answer that question by looking at \\(i\\)’s neighbors. If \\(i\\) is not in the giant component, then it can’t be connected to any node that is in the giant component. So, for each other node \\(j\\neq i\\), it must be the case that either:\nThere are \\(n-1\\) nodes other than \\(i\\), and so the probability that \\(i\\) is not connected to any other node in the giant component is \\((1 - p + pu)^{n-1}\\). We therefore have the equation\n\\[\nu = (1 - p + pu)^{n-1}\\;.\n\\]\nLet’s take the righthand side and use \\(p = c/(n-1)\\): \\[\n\\begin{aligned}\n    u &= (1 - p(1-u))^{n-1} \\\\\n      &= \\left(1 - \\frac{c(1-u)}{n-1}\\right)^{n-1}\\;.\n\\end{aligned}\n\\] This is a good time to go back to precalculus and remember the limit definition of the function \\(e^x\\): \\[\ne^x = \\lim_{n \\rightarrow \\infty}\\left(1 + \\frac{x}{n}\\right)^{n}\\;.\n\\] Since we are allowing \\(n\\) to grow large in our application, we approximate\n\\[\nu \\approx e^{-c(1-u)}\\;.\n\\] So, now we have a description of the fraction of nodes that aren’t in the giant component. We can get a description of how many nodes are in the giant component by substituting \\(s = 1-u\\), after which we get the equation we’re really after: \\[\ns = 1- e^{-cs}\n\\tag{1.1}\\]\nThis equation doesn’t have a closed-form solution for \\(s\\), but we can still plot it and compare the result to simulations (Figure 1.1). Not bad!\nShow code\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport networkx as nx\nplt.style.use('seaborn-v0_8-whitegrid')\n\n\n# experiment: compute the size of the largest connected \n# component as a function of graph size for a range of mean degrees. \n\ndef largest_component(n, p):\n    G = nx.fast_gnp_random_graph(n, p)\n    S = max(nx.connected_components(G), key=len)\n    return len(S) / n\n\nn = 50000\nC = np.repeat(np.linspace(0.5, 1.5, 11), 10)\nU = np.array([largest_component(n, c/(n-1)) for c in C])\n\n# theory: prediction based on Newman 11.16\n\nS = np.linspace(-.001, .6, 101)\nC_theory = -np.log(1-S)/S\n\n# plot the results to compare\n\nplt.plot(C_theory, \n         S, \n         color = \"black\", \n         label = \"Theoretical prediction\")\n\nplt.scatter(C, \n            U, \n            label = \"Experiment\")\n\nplt.gca().set(xlabel = \"Mean degree\", \n              ylabel = \"Proportion of graph in largest component\")\n\nplt.legend()\n\n\n\n\n\n\n\n\nFigure 1.1: Each point gives the fraction of an ER graph with 50,000 nodes occupied by the largest component. The mean degree is on the horizontal axis. The black line gives the theoretical prediction of Equation 1.1.",
    "crumbs": [
      "Network Fundamentals",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Some Stuff About Networks</span>"
    ]
  },
  {
    "objectID": "chapters/01-example.html#references",
    "href": "chapters/01-example.html#references",
    "title": "1  Some Stuff About Networks",
    "section": "References",
    "text": "References\n\n\n\n\nNewman, Mark. 2018. Networks. Oxford University Press.",
    "crumbs": [
      "Network Fundamentals",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Some Stuff About Networks</span>"
    ]
  },
  {
    "objectID": "chapters/02-example.html",
    "href": "chapters/02-example.html",
    "title": "2  Some Stuff About Networks",
    "section": "",
    "text": "References",
    "crumbs": [
      "Measuring Networks",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Some Stuff About Networks</span>"
    ]
  },
  {
    "objectID": "chapters/03-example.html",
    "href": "chapters/03-example.html",
    "title": "3  Some Stuff About Networks",
    "section": "",
    "text": "References",
    "crumbs": [
      "Measuring Networks",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Some Stuff About Networks</span>"
    ]
  },
  {
    "objectID": "chapters/04-example.html",
    "href": "chapters/04-example.html",
    "title": "4  Some Stuff About Networks",
    "section": "",
    "text": "References",
    "crumbs": [
      "Real-World Networks",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Some Stuff About Networks</span>"
    ]
  },
  {
    "objectID": "chapters/05-example.html",
    "href": "chapters/05-example.html",
    "title": "5  Some Stuff About Networks",
    "section": "",
    "text": "References",
    "crumbs": [
      "Models of Networks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Some Stuff About Networks</span>"
    ]
  }
]